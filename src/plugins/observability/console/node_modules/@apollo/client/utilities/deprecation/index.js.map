{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/utilities/deprecation/index.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAC;AAChC,OAAO,EAAE,SAAS,EAAE,MAAM,IAAI,aAAa,EAAE,MAAM,qBAAqB,CAAC;AAEzE,IAAM,mBAAmB,GAAG,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;AAC9D,IAAM,MAAM,GAAG,aAAoD,CAAC;AAEpE,IAAM,IAAI,GAAG,IAAI,IAAI,EAAY,CAAC;AA0FlC,SAAS,OAAO,CAAC,IAAqB;IACpC,OAAO,MAAM,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC/E,CAAC;AAED,MAAM,UAAU,gBAAgB,CAC9B,IAAyC;IACzC,cAA6C;SAA7C,UAA6C,EAA7C,qBAA6C,EAA7C,IAA6C;QAA7C,6BAA6C;;IAE7C,OAAO,IAAI,CAAC,SAAS,OAAd,IAAI,iBAAW,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAK,IAAI,UAAE;AACtE,CAAC;AAED,MAAM,UAAU,iBAAiB,CAI/B,OAAiB,EACjB,IAA6D,EAC7D,QAAkB,EAClB,cAAqD;IAArD,+BAAA,EAAA,6CAAqD;IAErD,cAAc,CAAC,IAAuB,EAAE;QACtC,IAAI,IAAI,IAAI,OAAO,EAAE,CAAC;YACpB,SAAS,CAAC,IAAI,CACZ,uEAAuE,EACvE,QAAQ,EACR,IAAI,EACJ,cAAc,CACf,CAAC;QACJ,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,IAAqB,EAAE,EAAc;IAClE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;QACnB,EAAE,EAAE,CAAC;IACP,CAAC;AACH,CAAC;AAED,MAAM,UAAU,wBAAwB;;IACtC,IAAM,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;IACzC,MAAM,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC;IACnC;QACE,GAAC,MAAM,CAAC,OAAO,IAAf;YACE,MAAM,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC;QACrC,CAAC;WACD;AACJ,CAAC","sourcesContent":["import { Slot } from \"optimism\";\nimport { invariant, global as untypedGlobal } from \"../globals/index.js\";\n\nconst muteAllDeprecations = Symbol.for(\"apollo.deprecations\");\nconst global = untypedGlobal as { [muteAllDeprecations]?: boolean };\n\nconst slot = new Slot<string[]>();\n\ntype WithValueArgs<TResult, TArgs extends any[], TThis> = [\n  callback: (this: TThis, ...args: TArgs) => TResult,\n  args?: TArgs | undefined,\n  thisArg?: TThis | undefined,\n];\n\nexport type PossibleDeprecations = {\n  \"cache.readQuery\": [\"canonizeResults\"];\n  \"cache.readFragment\": [\"canonizeResults\"];\n  \"cache.updateQuery\": [\"canonizeResults\"];\n  \"cache.updateFragment\": [\"canonizeResults\"];\n  InMemoryCache: [\"addTypename\", \"canonizeResults\"];\n  \"cache.read\": [\"canonizeResults\"];\n  \"cache.diff\": [\"canonizeResults\"];\n  \"cache.gc\": [\"resetResultIdentities\"];\n  ApolloClient: [\n    \"connectToDevTools\",\n    \"uri\",\n    \"credentials\",\n    \"headers\",\n    \"name\",\n    \"version\",\n    \"typeDefs\",\n  ];\n  \"client.watchQuery\": [\"canonizeResults\", \"partialRefetch\"];\n  \"client.query\": [\"canonizeResults\", \"notifyOnNetworkStatusChange\"];\n  setOptions: [\"canonizeResults\"];\n  useBackgroundQuery: [\"canonizeResults\"];\n  useFragment: [\"canonizeResults\"];\n  useLazyQuery: [\n    \"canonizeResults\",\n    \"variables\",\n    \"context\",\n    \"onCompleted\",\n    \"onError\",\n    \"defaultOptions\",\n    \"initialFetchPolicy\",\n    \"partialRefetch\",\n  ];\n  \"useLazyQuery.execute\": [\n    \"initialFetchPolicy\",\n    \"onCompleted\",\n    \"onError\",\n    \"defaultOptions\",\n    \"partialRefetch\",\n    \"canonizeResults\",\n    \"query\",\n    \"ssr\",\n    \"client\",\n    \"fetchPolicy\",\n    \"nextFetchPolicy\",\n    \"refetchWritePolicy\",\n    \"errorPolicy\",\n    \"pollInterval\",\n    \"notifyOnNetworkStatusChange\",\n    \"returnPartialData\",\n    \"skipPollAttempt\",\n  ];\n  useLoadableQuery: [\"canonizeResults\"];\n  useMutation: [\"ignoreResults\"];\n  useQuery: [\n    \"canonizeResults\",\n    \"partialRefetch\",\n    \"defaultOptions\",\n    \"onCompleted\",\n    \"onError\",\n  ];\n  useSuspenseQuery: [\"canonizeResults\"];\n  preloadQuery: [\"canonizeResults\"];\n  MockedProvider: [\"connectToDevTools\", \"addTypename\"];\n  ObservableQuery: [\n    \"observableQuery.result\",\n    \"getLastResult\",\n    \"getLastError\",\n    \"resetLastResults\",\n    \"setOptions\",\n  ];\n  HOC: [\n    \"graphql\" | \"withQuery\" | \"withMutation\" | \"withSubscription\",\n    \"parser\",\n  ];\n  RenderProps: [\"<Query />\" | \"<Mutation />\" | \"<Subscription />\"];\n};\n\nexport type DeprecationName =\n  | keyof PossibleDeprecations\n  | NonNullable<PossibleDeprecations[keyof PossibleDeprecations]>[number];\n\nfunction isMuted(name: DeprecationName) {\n  return global[muteAllDeprecations] || (slot.getValue() || []).includes(name);\n}\n\nexport function muteDeprecations<TResult, TArgs extends any[], TThis = any>(\n  name: DeprecationName | DeprecationName[],\n  ...args: WithValueArgs<TResult, TArgs, TThis>\n) {\n  return slot.withValue(Array.isArray(name) ? name : [name], ...args);\n}\n\nexport function warnRemovedOption<\n  TOptions extends Record<string, any>,\n  CallSite extends keyof PossibleDeprecations,\n>(\n  options: TOptions,\n  name: keyof TOptions & PossibleDeprecations[CallSite][number],\n  callSite: CallSite,\n  recommendation: string = \"Please remove this option.\"\n) {\n  warnDeprecated(name as DeprecationName, () => {\n    if (name in options) {\n      invariant.warn(\n        \"[%s]: `%s` is deprecated and will be removed in Apollo Client 4.0. %s\",\n        callSite,\n        name,\n        recommendation\n      );\n    }\n  });\n}\n\nexport function warnDeprecated(name: DeprecationName, cb: () => void) {\n  if (!isMuted(name)) {\n    cb();\n  }\n}\n\nexport function withDisabledDeprecations() {\n  const prev = global[muteAllDeprecations];\n  global[muteAllDeprecations] = true;\n  return {\n    [Symbol.dispose]() {\n      global[muteAllDeprecations] = prev;\n    },\n  };\n}\n"]}